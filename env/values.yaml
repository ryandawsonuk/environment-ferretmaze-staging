expose:
  Args: 
    - --v
    - 4
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded

cleanup:
  Args: 
    - --cleanup
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
expose:
  config:
    domain: activiti.envalfresco.com
    exposer: Ingress
    http: "true"
    tlsacme: "false"
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded

global:
  keycloak:
    url: "http://jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com/auth"

application:
  activiti-cloud-query:
    enabled: true
    db:
      name: querypostgresql
      password: query
  querypostgresql:
     postgresPassword: query
  activiti-cloud-audit:
    enabled: true
  activiti-cloud-demo-ui:
    service:
      annotations:
        fabric8.io/expose: "true"
        fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
    gatewayUrl:  "http://activiti-cloud-gateway.jx-staging.activiti.envalfresco.com"
    idmUrl: "http://jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com/auth/realms/activiti/protocol/openid-connect/token"
    idmClientId:  "activiti"

  rabbitmq:
    enabled: true
    rabbitmqUsername: "guest"
    rabbitmqPassword: "guest"
    rabbitmqErlangCookie: 124567890abcdefghijklmnopqrstuv
    rabbitmqSTOMPPlugin:
      enabled: true
    resources:
     limits:
      cpu: 200m
      memory: 1Gi
     requests:
      cpu: 100m
      memory: 1Gi
    rbac:
      create: true
    replicaCount: 1
    ingress:
      enabled: true
      hostName: "jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com"
      path: /rabbitmq
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Forwarded-Proto, X-Forwarded-Port, X-Forwarded-Prefix"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"

infrastructure:
  activiti-keycloak:
    keycloak:
      enabled: true
      keycloak:
        username: admin
        password: admin
        persistence:
          deployPostgres: false
          dbVendor: H2
        ingress:
          enabled: true
          path: /
          hosts:
            - "jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com"
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/configuration-snippet: |
              add_header Access-Control-Allow-Methods "POST, GET, OPTIONS, PUT, PATCH, DELETE";
              add_header Access-Control-Allow-Credentials true;
              add_header Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization";
    # don't add the allowed origin automatically as then we get twice (because in realm config too?)
    #          add_header Access-Control-Allow-Origin $http_origin;
        livenessProbe:
          initialDelaySeconds: 140
        extraVolumes: |
          - name: realm-secret
            secret:
              secretName: {{ .Release.Name }}-realm-secret
        extraVolumeMounts: |
          - name: realm-secret
            mountPath: "/realm/"
            readOnly: true
        extraArgs: -Dkeycloak.import=activiti-realm.json
        preStartScript: |
          /opt/jboss/keycloak/bin/add-user.sh -u admin -p admin
          /opt/jboss/keycloak/bin/add-user-keycloak.sh -r master -u admin -p admin
          cp /realm/activiti-realm.json .
          sed -i 's/activiti-cloud-demo-ui:30082/jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com/g' activiti-realm.json
          sed -i 's/activiti-cloud-demo-ui:\*/jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com:*/g' activiti-realm.json
          sed -i 's/placeholder.com/jx-staging-quickstart-http.jx-staging.activiti.envalfresco.com:*/g' activiti-realm.json
          sed -i 's/dummy.com/gw.jx-staging.activiti.envalfresco.com:*/g' activiti-realm.json
          sed -i 's/activiti-cloud-sso-idm-kub:30082/gw.jx-staging.activiti.envalfresco.com/g' activiti-realm.json
          sed -i 's/activiti-cloud-demo-ui:3000/activiti-cloud-demo-ui.jx-staging.activiti.envalfresco.com/g' activiti-realm.json
  activiti-cloud-gateway:
    service:
      annotations:
        fabric8.io/expose: "true"
        kubernetes.io/ingress.class: nginx
        fabric8.io/ingress.annotations: |-
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/enable-cors: true
          nginx.ingress.kubernetes.io/cors-allow-headers: "*"
          nginx.ingress.kubernetes.io/x-forwarded-prefix: true